#!/bin/bash
### BEGIN INIT INFO
# If you wish the Daemon to be lauched at boot / stopped at shutdown :
#
#	 On Debian-based distributions:
#	   INSTALL : update-rc.d scriptname defaults
#	   (UNINSTALL : update-rc.d -f	scriptname remove)
#
#	 On RedHat-based distributions (CentOS, OpenSUSE...):
#	   INSTALL : chkconfig --level 35 scriptname on
#	   (UNINSTALL : chkconfig --level 35 scriptname off)
#
# chkconfig:		 2345 90 60
# Provides:			 /opt/kibana/src/cli
# Required-Start:	 $remote_fs $syslog
# Required-Stop:	 $remote_fs $syslog
# Default-Start:	 2 3 4 5
# Default-Stop:		 0 1 6
# Short-Description: forever running /opt/kibana/src/cli
# Description:		 /opt/kibana/src/cli
### END INIT INFO
#
# initd a node app
# Based on a script posted by https://gist.github.com/jinze at https://gist.github.com/3748766
#

if [ -e /lib/lsb/init-functions ]; then
	# LSB source function library.
	. /lib/lsb/init-functions
fi;

pidFile="<%= node['kibana']['install_dir'] %>/kibana.pid"
logFile="<%= node['kibana']['install_dir'] %>/kibana.log"

command="node"
nodeApp="<%= node['kibana']['install_dir'] %>/src/cli"
foreverApp="forever"

start() {
	echo "Starting $nodeApp"

	# Notice that we change the PATH because on reboot
	# the PATH does not include the path to node.
	# Launching forever with a full path
	# does not work unless we set the PATH.
	PATH=/usr/local/bin:$PATH
	export NODE_ENV=production
	#PORT=80
	$foreverApp start --pidFile $pidFile -l $logFile -a -d -c "$command" $nodeApp
	RETVAL=$?
}

restart() {
	echo "Restarting $nodeApp"
	$foreverApp restart $nodeApp
	RETVAL=$?
}

stop() {
	echo "Shutting down $nodeApp"
	$foreverApp stop $nodeApp
	RETVAL=$?
}

status() {
	echo "Status $nodeApp"
	$foreverApp list
	$foreverApp list | egrep "No forever processes running"
	if [ $? -eq 1 ]; then
		RETVAL=0
	else
		RETVAL=3
	fi
}

case "$1" in
	start)
		start
		;;
	stop)
		stop
		;;
	status)
		status
		;;
	restart)
		restart
		;;
	*)
		echo "Usage:  {start|stop|status|restart}"
		exit 1
		;;
esac
exit $RETVAL
